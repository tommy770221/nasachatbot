// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.nasa.hackson.nasachatbot.web.controller;

import com.nasa.hackson.nasachatbot.domain.Attachment;
import com.nasa.hackson.nasachatbot.domain.Button;
import com.nasa.hackson.nasachatbot.domain.Message;
import com.nasa.hackson.nasachatbot.domain.Messagetemplate;
import com.nasa.hackson.nasachatbot.domain.MsgElement;
import com.nasa.hackson.nasachatbot.domain.PayLoad;
import com.nasa.hackson.nasachatbot.domain.PeopleDecision;
import com.nasa.hackson.nasachatbot.web.controller.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Attachment, String> ApplicationConversionServiceFactoryBean.getAttachmentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nasa.hackson.nasachatbot.domain.Attachment, java.lang.String>() {
            public String convert(Attachment attachment) {
                return new StringBuilder().append(attachment.getType()).toString();
            }
        };
    }
    
    public Converter<Long, Attachment> ApplicationConversionServiceFactoryBean.getIdToAttachmentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nasa.hackson.nasachatbot.domain.Attachment>() {
            public com.nasa.hackson.nasachatbot.domain.Attachment convert(java.lang.Long id) {
                return Attachment.findAttachment(id);
            }
        };
    }
    
    public Converter<String, Attachment> ApplicationConversionServiceFactoryBean.getStringToAttachmentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nasa.hackson.nasachatbot.domain.Attachment>() {
            public com.nasa.hackson.nasachatbot.domain.Attachment convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Attachment.class);
            }
        };
    }
    
    public Converter<Button, String> ApplicationConversionServiceFactoryBean.getButtonToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nasa.hackson.nasachatbot.domain.Button, java.lang.String>() {
            public String convert(Button button) {
                return new StringBuilder().append(button.getGoTotemplate()).append(' ').append(button.getType()).append(' ').append(button.getUrl()).append(' ').append(button.getTitle()).toString();
            }
        };
    }
    
    public Converter<Long, Button> ApplicationConversionServiceFactoryBean.getIdToButtonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nasa.hackson.nasachatbot.domain.Button>() {
            public com.nasa.hackson.nasachatbot.domain.Button convert(java.lang.Long id) {
                return Button.findButton(id);
            }
        };
    }
    
    public Converter<String, Button> ApplicationConversionServiceFactoryBean.getStringToButtonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nasa.hackson.nasachatbot.domain.Button>() {
            public com.nasa.hackson.nasachatbot.domain.Button convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Button.class);
            }
        };
    }
    
    public Converter<Message, String> ApplicationConversionServiceFactoryBean.getMessageToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nasa.hackson.nasachatbot.domain.Message, java.lang.String>() {
            public String convert(Message message) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Message> ApplicationConversionServiceFactoryBean.getIdToMessageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nasa.hackson.nasachatbot.domain.Message>() {
            public com.nasa.hackson.nasachatbot.domain.Message convert(java.lang.Long id) {
                return Message.findMessage(id);
            }
        };
    }
    
    public Converter<String, Message> ApplicationConversionServiceFactoryBean.getStringToMessageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nasa.hackson.nasachatbot.domain.Message>() {
            public com.nasa.hackson.nasachatbot.domain.Message convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Message.class);
            }
        };
    }
    
    public Converter<Messagetemplate, String> ApplicationConversionServiceFactoryBean.getMessagetemplateToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nasa.hackson.nasachatbot.domain.Messagetemplate, java.lang.String>() {
            public String convert(Messagetemplate messagetemplate) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Messagetemplate> ApplicationConversionServiceFactoryBean.getIdToMessagetemplateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nasa.hackson.nasachatbot.domain.Messagetemplate>() {
            public com.nasa.hackson.nasachatbot.domain.Messagetemplate convert(java.lang.Long id) {
                return Messagetemplate.findMessagetemplate(id);
            }
        };
    }
    
    public Converter<String, Messagetemplate> ApplicationConversionServiceFactoryBean.getStringToMessagetemplateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nasa.hackson.nasachatbot.domain.Messagetemplate>() {
            public com.nasa.hackson.nasachatbot.domain.Messagetemplate convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Messagetemplate.class);
            }
        };
    }
    
    public Converter<MsgElement, String> ApplicationConversionServiceFactoryBean.getMsgElementToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nasa.hackson.nasachatbot.domain.MsgElement, java.lang.String>() {
            public String convert(MsgElement msgElement) {
                return new StringBuilder().append(msgElement.getTitle()).append(' ').append(msgElement.getImageUrl()).append(' ').append(msgElement.getSubtitle()).toString();
            }
        };
    }
    
    public Converter<Long, MsgElement> ApplicationConversionServiceFactoryBean.getIdToMsgElementConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nasa.hackson.nasachatbot.domain.MsgElement>() {
            public com.nasa.hackson.nasachatbot.domain.MsgElement convert(java.lang.Long id) {
                return MsgElement.findMsgElement(id);
            }
        };
    }
    
    public Converter<String, MsgElement> ApplicationConversionServiceFactoryBean.getStringToMsgElementConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nasa.hackson.nasachatbot.domain.MsgElement>() {
            public com.nasa.hackson.nasachatbot.domain.MsgElement convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), MsgElement.class);
            }
        };
    }
    
    public Converter<PayLoad, String> ApplicationConversionServiceFactoryBean.getPayLoadToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nasa.hackson.nasachatbot.domain.PayLoad, java.lang.String>() {
            public String convert(PayLoad payLoad) {
                return new StringBuilder().append(payLoad.getTemplateType()).toString();
            }
        };
    }
    
    public Converter<Long, PayLoad> ApplicationConversionServiceFactoryBean.getIdToPayLoadConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nasa.hackson.nasachatbot.domain.PayLoad>() {
            public com.nasa.hackson.nasachatbot.domain.PayLoad convert(java.lang.Long id) {
                return PayLoad.findPayLoad(id);
            }
        };
    }
    
    public Converter<String, PayLoad> ApplicationConversionServiceFactoryBean.getStringToPayLoadConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nasa.hackson.nasachatbot.domain.PayLoad>() {
            public com.nasa.hackson.nasachatbot.domain.PayLoad convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PayLoad.class);
            }
        };
    }
    
    public Converter<PeopleDecision, String> ApplicationConversionServiceFactoryBean.getPeopleDecisionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nasa.hackson.nasachatbot.domain.PeopleDecision, java.lang.String>() {
            public String convert(PeopleDecision peopleDecision) {
                return new StringBuilder().append(peopleDecision.getMsgFBId()).append(' ').append(peopleDecision.getGender()).append(' ').append(peopleDecision.getActionButton()).append(' ').append(peopleDecision.getCreateDate()).toString();
            }
        };
    }
    
    public Converter<Long, PeopleDecision> ApplicationConversionServiceFactoryBean.getIdToPeopleDecisionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nasa.hackson.nasachatbot.domain.PeopleDecision>() {
            public com.nasa.hackson.nasachatbot.domain.PeopleDecision convert(java.lang.Long id) {
                return PeopleDecision.findPeopleDecision(id);
            }
        };
    }
    
    public Converter<String, PeopleDecision> ApplicationConversionServiceFactoryBean.getStringToPeopleDecisionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nasa.hackson.nasachatbot.domain.PeopleDecision>() {
            public com.nasa.hackson.nasachatbot.domain.PeopleDecision convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PeopleDecision.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAttachmentToStringConverter());
        registry.addConverter(getIdToAttachmentConverter());
        registry.addConverter(getStringToAttachmentConverter());
        registry.addConverter(getButtonToStringConverter());
        registry.addConverter(getIdToButtonConverter());
        registry.addConverter(getStringToButtonConverter());
        registry.addConverter(getMessageToStringConverter());
        registry.addConverter(getIdToMessageConverter());
        registry.addConverter(getStringToMessageConverter());
        registry.addConverter(getMessagetemplateToStringConverter());
        registry.addConverter(getIdToMessagetemplateConverter());
        registry.addConverter(getStringToMessagetemplateConverter());
        registry.addConverter(getMsgElementToStringConverter());
        registry.addConverter(getIdToMsgElementConverter());
        registry.addConverter(getStringToMsgElementConverter());
        registry.addConverter(getPayLoadToStringConverter());
        registry.addConverter(getIdToPayLoadConverter());
        registry.addConverter(getStringToPayLoadConverter());
        registry.addConverter(getPeopleDecisionToStringConverter());
        registry.addConverter(getIdToPeopleDecisionConverter());
        registry.addConverter(getStringToPeopleDecisionConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
